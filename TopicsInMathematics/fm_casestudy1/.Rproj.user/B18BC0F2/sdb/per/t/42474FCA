{
    "collab_server" : "",
    "contents" : "# fm_casestudy_1_0.r\n#\n#   * Install/load R packages \n#   * Collect historical financial data from internet\n#   * Create time series data matrix: casestudy1.data0.0\n#         Closing prices on stocks (BAC, GE, JDSU, XOM)\n#         Closing values of indexes (SP500)\n#         Yields on constant maturity US rates/bonds (3MO, 1YR, 5YR, 10 YR)\n#         Closing price on crude oil spot price\n# 0. Install and load packages ----\n#\n# 0.1 Install packages ---\n#     Set ind.install0 to TRUE if running script for first time on a computer\n#     or updating the packages\nind.install0<-FALSE\n#\nif (ind.install0){\ninstall.packages(\"quantmod\") \ninstall.packages(\"tseries\") \ninstall.packages(\"vars\")\ninstall.packages(\"fxregime\")\n}\n# 0.2 Load packages into R session\n\nlibrary(\"quantmod\")  \nlibrary(\"tseries\")  \nlibrary(\"vars\")  \nlibrary(\"fxregime\")  \n\n# 1. Load data into R session ----\n\n#   1.1  Stock Price Data from Yahoo\n#         Apply quantmod(sub-package TTR)  function \n#           getYahoodata \n#\n#             Returns historical data for any symbol at the website \n#              http://finance.yahoo.com\n#\n#     1.1.1 Set start and end date for collection in YYYYMMDD (numeric) format\ndate.start<-20000101\ndate.end<-20130531\n\n\n#     1.1.2 Collect historical data for S&P 500 Index\nSP500 <- getYahooData(\"^GSPC\", start=date.start, end=date.end)\nchartSeries(SP500[,1:5])\n\n#     1.1.3 Collect historical data for 4 stocks\nGE <- getYahooData(\"GE\", start=date.start, end=date.end)\nBAC <- getYahooData(\"BAC\", start=date.start, end=date.end)\n#JDSU <- getYahooData(\"JDSU\", start=date.start, end=date.end)\nXOM <- getYahooData(\"XOM\", start=date.start, end=date.end)\n\nchartSeries(GE[,1:5])\nchartSeries(BAC[,1:5])\n#chartSeries(JDSU[,1:5])\nchartSeries(XOM[,1:5])\n\n#     1.1.4 Details of data object GE from getYahoodata\n#\n# GE is a matrix object with \n#     row dimension equal to the number of dates \n#     column dimension equal to 9\nis.matrix(GE)\ndim(GE)\n#   Print out the first and last parts of the matrix:\nhead(GE)\ntail(GE)\n#   Some attributes of the object GE\n\nmode(GE)  # storage mode of GE is \"numeric\"\nclass(GE) # object-oriented class(es) of GE are \"xts\" and \"zoo\"\n          # xts is an extensible time-series object from the package xts\n          # zoo is an object storing ordered observations in a vector or matrix with an index attribute \n              # Important zoo functions\n              #   coredata() extracts or replaces core data\n              #   index() extracts or replaces the  (sort.by) index of the object\n\n# 1.2 Federal Reserve Economic Data (FRED) from the St. Louis Federal Reserve\n#       Apply quantmod  function \n#           getSymbols( seriesname, src=\"FRED\")\n#\n#             Returns historical data for any symbol at the website\n#               http://research.stlouisfed.org/fred2/\n#\n# Series name | Description\n# \n# DGS3MO      | 3-Month Treasury, constant maturity rate\n# DGS1        | 1-Year Treasury, constant maturity rate\n# DGS5        | 5-Year Treasury, constant maturity rate\n# DGS10       | 10-Year Treasury, constant maturity rate\n#\n# DAAA        | Moody's Seasoned Aaa Corporate Bond Yield \n# DBAA        | Moody's Seasoned Baa Corporate Bond Yield \n#\n# DCOILWTICO  | Crude Oil Prices: West Text Intermediate (WTI) - Cushing, Oklahoma\n# \n#   1.2.1   Default setting collects entire series\n#           and assigns to object of same name as the series\ngetSymbols(\"DGS3MO\", src=\"FRED\")\ngetSymbols(\"DGS1\", src=\"FRED\")\ngetSymbols(\"DGS5\", src=\"FRED\")\ngetSymbols(\"DGS10\", src=\"FRED\")\n\ngetSymbols(\"DAAA\", src=\"FRED\")\ngetSymbols(\"DBAA\", src=\"FRED\")\n\ngetSymbols(\"DCOILWTICO\", src=\"FRED\")\n\n# Each object is a 1-column matrix with time series data\n#   The column-name is the same as the object name\nis.matrix(DGS3MO) #\ndim(DGS3MO)\nhead(DGS3MO)\ntail(DGS3MO)\nmode(DGS3MO)\nclass(DGS3MO)\n#\n# 2.0   Merge data series together\n\n#   2.1 Create data frame with all FRED series from 2000/01/01 on\n# \n#   Useful functions/methods   for zoo objects\n#     merge()\n#     lag (lag.zoo)\n#     diff()\n#     window.zoo()\n#\n#     na.locf() # replace NAs by last previou non-NA\n#     rollmean(), rollmax() # compute rolling functions, column-wise\n\nfred.data0<-merge(\n  DGS3MO,\n  DGS1,\n  DGS5,\n  DGS10,\n  DAAA,\n  DBAA,\n  DCOILWTICO)[\"2000::2013-05\"]\n\ntail(fred.data0)\n\n# Determine data dimensions\ndim(fred.data0)\nclass(fred.data0)\n\n# Check first and last rows in object\nhead(fred.data0) ; tail(fred.data0)\n# Count the number of NAs in each column\napply(is.na(fred.data0),2,sum)\n#  Plot the rates series all togehter\nopar<-par()\n\npar(fg=\"blue\",bg=\"black\",\n    col.axis=\"gray\",\n    col.lab=\"gray\",\n    col.main=\"blue\",\n    col.sub=\"blue\")\n\nts.plot(as.ts(fred.data0[,1:6]),col=rainbow(6),bg=\"black\",\n        main=\"FRED Data:  Rates\")\npar(opar)\n\n# add legend to plot\nlegend(x=0,y=2, \n       legend=dimnames(fred.data0)[[2]][1:6],\n       lty=rep(1,times=6), \n       col=rainbow(6), \n       cex=0.75)\n# Plot the Crude Oil PRice\nchartSeries(to.monthly(fred.data0[,\"DCOILWTICO\"]), main=\"FRED Data: Crude Oil (WTI)\")\n\nchartSeries(to.monthly(XOM[,1:5]))\n\n\n#   2.2 Merge the closing prices for the stock market data series\nyahoo.data0<-merge(BAC$Close,\n           GE$Close,\n           #JDSU$Close,\n           XOM$Close,\n           SP500$Close)\n# Replace the index of yahoo data with date values that do not include hours/minutes\n\ndimnames(yahoo.data0)[[2]]<-c(\"BAC\",\"GE\",\"XOM\",\"SP500\")\nyahoo.data0.0<-zoo(x=coredata(yahoo.data0), order.by=as.Date(time(yahoo.data0)))\n\n# fred.data0 is already indexed by this scale\n\n#   2.3 Merge the yahoo and Fred data together\n\n#     2.3.1 merge with all dates\ncasestudy1.data0<-merge(yahoo.data0.0, fred.data0)\n\ndim(casestudy1.data0)\nhead(casestudy1.data0)\ntail(casestudy1.data0)\napply(is.na(casestudy1.data0),2,sum)\n\n#     2.3.2 Subset out days when SP500 is not missing (not == NA)\n\nindex.notNA.SP500<-which(is.na(coredata(casestudy1.data0$SP500))==FALSE)\ncasestudy1.data0.0<-casestudy1.data0[index.notNA.SP500,]\n\nhead(casestudy1.data0.0)\ntail(casestudy1.data0.0)\n\napply(is.na(casestudy1.data0.0)==TRUE, 2,sum)\n\n# Remaining missing values are for interest rates and the crude oil spot price\n#   There are days when the stock market is open but the bond market and/or commodities market\n#   is closed \n# For the rates and commodity data, replace NAs with previoius non-NA values\ncasestudy1.data0.00<-na.locf(casestudy1.data0.0)\n\napply(is.na(casestudy1.data0.00),2,sum) # Only 1 NA left, the first DCOILWTICO value\n\nsave(file=\"casestudy_1_0.RData\", list=ls())\n\n",
    "created" : 1481141737744.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1200161925",
    "id" : "42474FCA",
    "lastKnownWriteTime" : 1481145777,
    "last_content_update" : 1481145777115,
    "path" : "~/Dev/R/Topics in Mathematics /fm_casestudy1/fm_casestudy_1_0.r",
    "project_path" : "fm_casestudy_1_0.r",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}